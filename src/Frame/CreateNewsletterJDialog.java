package Frame;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.GroupLayout;
import javax.swing.JOptionPane;

import DataAccess.NewsletterRepository;
import Entity.Newsletter;

public class CreateNewsletterJDialog extends javax.swing.JDialog {
	NewsletterRepository newsRepo;
    /**
     * Creates new form CadastraNewsletterJDialog
     */
    public CreateNewsletterJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        newsRepo = new NewsletterRepository(Main.App.db);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        datejLabel = new javax.swing.JLabel();
        situacaojCheckBox = new javax.swing.JCheckBox();
        situacaojLabel = new javax.swing.JLabel();
        datajFormattedTextField = new javax.swing.JFormattedTextField();
        savejButton = new javax.swing.JButton();
        sairjButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        datejLabel.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        datejLabel.setText("Data:");

        situacaojLabel.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        situacaojLabel.setText("Habilitado ?");

        try {
            datajFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        datajFormattedTextField.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                datajFormattedTextFieldActionPerformed(evt);
            }
        });

        savejButton.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        savejButton.setText("Salvar");
        savejButton.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				saveActionPerformed(e);
			}
        });

        sairjButton.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        sairjButton.setText("Sair");
        sairjButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(savejButton)
        				.addGroup(layout.createParallelGroup(Alignment.LEADING)
        					.addGroup(layout.createSequentialGroup()
        						.addComponent(situacaojLabel)
        						.addGap(18)
        						.addComponent(situacaojCheckBox, GroupLayout.PREFERRED_SIZE, 17, GroupLayout.PREFERRED_SIZE))
        					.addGroup(layout.createSequentialGroup()
        						.addComponent(datejLabel)
        						.addPreferredGap(ComponentPlacement.RELATED)
        						.addComponent(datajFormattedTextField, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE))))
        			.addGap(18)
        			.addComponent(sairjButton)
        			.addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(datejLabel)
        				.addComponent(datajFormattedTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(situacaojCheckBox, 0, 0, Short.MAX_VALUE)
        				.addComponent(situacaojLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        			.addPreferredGap(ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(savejButton)
        				.addComponent(sairjButton))
        			.addContainerGap())
        );
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void datajFormattedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datajFormattedTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datajFormattedTextFieldActionPerformed

    private void sairjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairjButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_sairjButtonActionPerformed
    
    private void saveActionPerformed(java.awt.event.ActionEvent e) {
    	try {
    		Newsletter newsletter = new Newsletter();
        	Date date = new SimpleDateFormat("dd/MM/yyyy").parse(datajFormattedTextField.getText());
        	newsletter.setDate(date);
        	newsletter.setEnabled(situacaojCheckBox.isSelected());
        	
        	newsRepo.insert(newsletter);
        	JOptionPane.showMessageDialog(null, "Newsletter inserida com sucesso");
        	this.dispose();
    	} catch (SQLException ex) {
    		System.out.println("NÃ£o foi possivel inserir newsletter");
    		ex.printStackTrace();
    	} catch (ParseException ex) {
    		System.out.println("Erro ao converter data");
    		System.out.println(ex.getMessage());
    	}
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateNewsletterJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateNewsletterJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateNewsletterJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateNewsletterJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
			public void run() {
                CreateNewsletterJDialog dialog = new CreateNewsletterJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField datajFormattedTextField;
    private javax.swing.JLabel datejLabel;
    private javax.swing.JButton sairjButton;
    private javax.swing.JButton savejButton;
    private javax.swing.JCheckBox situacaojCheckBox;
    private javax.swing.JLabel situacaojLabel;
    // End of variables declaration//GEN-END:variables
}
